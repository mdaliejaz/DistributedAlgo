class Request(object):
    def __init__(self, requestID, client, subjectID, resourceID, action, subjectAttributeMap, resourceAttributeMap):
        self.requestID = requestID
        self.fromClient = client
        self.subjectID = subjectID
        self.resourceID = resourceID
        self.action = action
        # Tentative attribute maps
        self.subjectAttributeMap = subjectAttributeMap
        self.resourceAttributeMap = resourceAttributeMap
        self.requiredSubjAtrribs = set()
        self.requiredResourceAtrribs = set()


class DBResponse(object):
    def __init__(self, request, evaluation, readDbSubjectMap, readDbResourceMap):
        self.request = request
        self.evaluation = evaluation
        # Maps which contain fields read from DB which are not in tentative maps and used for policy evaluation
        self.readDbSubjectMap = readDbSubjectMap
        self.readDbResourceMap = readDbResourceMap


class Response(object):
    def __init__(self, dbresponse, toUpdateSubjectMap, toUpdateResourceMap, readSubjectAttributeMap, readResourceAttributeMap):
        self.dbresponse = dbresponse
        # These maps are different from the ones in DB response
        # These maps store the updated attributes only
        self.toUpdateSubjectMap = toUpdateSubjectMap
        self.toUpdateResourceMap = toUpdateResourceMap
        self.readSubjectAttributeMap = readSubjectAttributeMap
        self.readResourceAttributeMap = readResourceAttributeMap


class PolicyRule(object):
    def __init__(self, subjectCondition, resourceCondition, subjectUpdate, resourceUpdate):
        self.subjectCondition = subjectCondition
        self.resourceCondition = resourceCondition
        self.subjectUpdate = subjectUpdate
        self.resourceUpdate = resourceUpdate
