import sys
import da
import xml.etree.ElementTree as ET
from util import PolicyRule
from util import Response

class Worker(process):
	def setup(coordinators:list, dbInstance, config):
		self.coordinators = coordinators
		self.policyMap = {}
		readPolicy(config.get("setup", "policyFile"))


	def receive(msg= ('WORKER_ASSIGN', request)):
		# policy evaluation from central source
		# send to subject coordinator
		output('worker received')
		id = int(request.subjectID) % len(self.coordinators)
		send(('WORKER_RESPONSE', Response(request, None, None, None)), to=(coordinators[id]))

	def run():
		output('worker starting...')
		await(received(('done',)))
		
	def readPolicy(policyFile):
		root = ET.parse(policyFile).getroot()
		
		for rule in root.iter('rule'):
			sc=rule.find('subjectCondition').attrib
			rc=rule.find('resourceCondition').attrib
			act=rule.find('action').attrib
			su=rule.find('subjectUpdate')
			if su != None:
				su = su.attrib
			ru=rule.find('resourceUpdate')
			if ru != None:
				ru = ru.attrib
            	
			if (act["name"] not in self.policyMap):
				self.policyMap[act["name"]] = []
			self.policyMap[act["name"]].append(PolicyRule(sc,rc,su,ru))
			
		print(self.policyMap)