import sys
import da
import uuid
import worker as wor
from util import Request

class Coordinator(process):
	def setup(coordinators:list, dbInstance, config):
		self.coordinators = coordinators
		self.size = len(coordinators)
		# TODO: Change to n workers and decide later
		self.workers = new(wor.Worker, num= 1)
		setup(self.workers, (self.coordinators, dbInstance, config))
		start(self.workers)

	def evaluatePolicy():
		evaluationID = getUniqueID()
		timestamp = logical_clock()

	def receive(msg= ('resource_coord',request)):
		# call worker send
		output('hello from resource coordinator resource - ' + str(request._subjectID))
		send(('worker_assign',request._subjectID, request._resourceID), to=workers)

	def getUniqueID():
		return uuid.uuid4()

	def receive(msg= ('worker_response',subjectID,resourceID)):
		output('worker hello')

	def receive(msg= ('client',subjectID, resourceID)):
		output('client hello')
		# process and send to authorize of Resource coordinator
		id = int(resourceID) % size
		request = Request(subjectID, resourceID, "action")
		evaluatePolicy()
		send(('resource_coord',request), to=(coordinators[id]))

	def run():
		output('coordinator starting...')
		await(received(('done',)))
